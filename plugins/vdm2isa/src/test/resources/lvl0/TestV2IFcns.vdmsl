module TestV2IFcns
exports all
definitions

functions

	-- constant function with undeclared specification
	const: () -> nat
	const() == 10;

	-- constant function with declared specification
	constS: () -> nat
	constS() == 10
	pre 10 > 5
	post RESULT > 0;

	-- "normal" function with undeclared specification
	f: nat * nat1 -> nat1
	f(x, y) == x + y;

	-- "normal" function with declared specification
	g: nat * nat1 -> nat1
	g(x, y) == x + y
	pre x > 10 
	post x < RESULT;

	-- "normal" function with declared specification and pre/post references
	h: nat -> nat
	h(x) == g(x, x)
	pre pre_g(x, x) 
	post post_g(x, x, RESULT) ;

	-- "normal" function with declared specification without pre/post references
	h': nat -> nat
	h'(x) == g(x, x)
	pre x < 20
	post x > 20;

	-- "normal" function with declared specification without pre/post references
	h'': nat -> nat
	h''(x) == g(x, x)
	pre x < 20
	post pre_g(x,RESULT) ;

	-- curried function with undeclared specification (and implicit PO on inner type)	
	curried: nat -> int -> nat
	curried(x)(y) == x + y;

	-- curried function with declared specification	
	curriedS: nat -> nat -> nat
	curriedS(x)(y) == x + y
	pre x > y
	post x < RESULT and y < RESULT;

	implicit(x, y: nat, z: set of nat) r: seq of nat 
	pre x < y and x in set z
	post x > len r;

	implicitexplicit(x, y: nat, z: set of nat) r: seq of nat 
		== [x,y]
	pre x < y and x in set z
	post x > len r;
		
end TestV2IFcns

/*
> pog
Generated 21 proof obligations:

Proof Obligation 1: (Unproved)
constS: post condition obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 12:5
pre_constS() => post_constS(10)

Proof Obligation 2: (Unproved)
g: post condition obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 22:5
(forall x:nat, y:nat1 &
  pre_g(x, y) => post_g(x, y, (x + y)))

Proof Obligation 3: (Unproved)
h: subtype obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 30:18
(forall x:nat &
  x > 0)

Proof Obligation 4: (Unproved)
h: post condition obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 28:5
(forall x:nat &
  pre_h(x) => post_h(x, g(x, x)))

Proof Obligation 5: (Unproved)
h: subtype obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 31:20
(forall x:nat &
  (pre_h(x) => let RESULT:nat = g(x, x) in 
    x > 0))

Proof Obligation 6: (Unproved)
h: subtype obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 31:23
(forall x:nat &
  (pre_h(x) => let RESULT:nat = g(x, x) in 
    RESULT > 0))

Proof Obligation 7: (Unproved)
h: function apply obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 29:13
(forall x:nat & pre_h(x) =>
  pre_g(x, x))

Proof Obligation 8: (Unproved)
h: subtype obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 29:18
(forall x:nat & pre_h(x) =>
  x > 0)

Proof Obligation 9: (Unproved)
h': post condition obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 34:5
(forall x:nat &
  pre_h'(x) => post_h'(x, g(x, x)))

Proof Obligation 10: (Unproved)
h': function apply obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 35:14
(forall x:nat & pre_h'(x) =>
  pre_g(x, x))

Proof Obligation 11: (Unproved)
h': subtype obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 35:19
(forall x:nat & pre_h'(x) =>
  x > 0)

Proof Obligation 12: (Unproved)
h'': post condition obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 40:5
(forall x:nat &
  pre_h''(x) => post_h''(x, g(x, x)))

Proof Obligation 13: (Unproved)
h'': subtype obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 43:18
(forall x:nat &
  (pre_h''(x) => let RESULT:nat = g(x, x) in 
    RESULT > 0))

Proof Obligation 14: (Unproved)
h'': function apply obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 41:15
(forall x:nat & pre_h''(x) =>
  pre_g(x, x))

Proof Obligation 15: (Unproved)
h'': subtype obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 41:20
(forall x:nat & pre_h''(x) =>
  x > 0)

Proof Obligation 16: (Unproved)
curried: subtype obligation in 'TestV2IFcns' (TestV2IFcns.vdmsl) at line 46:5
(forall x:nat, y:int &
  (x + y) >= 0)
  
Proof Obligation 17: (Unproved)
curriedS: post condition obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 50:5
(forall x:nat, y:nat &
  pre_curriedS(x)(y) => post_curriedS(x)(y, (x + y)))

Proof Obligation 18: (Unproved)
implicit: total function obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 56:15
(forall x:nat, y:nat, z:set of (nat) &
  is_(pre_implicit(x, y, z), bool))

Proof Obligation 19: (Unproved)
implicit: function satisfiability obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 55:5
(forall x:nat, y:nat, z:set of (nat) &
  pre_implicit(x, y, z) => exists r:seq of (nat) & post_implicit(x, y, z, r))

Proof Obligation 20: (Unproved)
implicitexplicit: total function obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 61:15
(forall x:nat, y:nat, z:set of (nat) &
  is_(pre_implicitexplicit(x, y, z), bool))

Proof Obligation 21: (Unproved)
implicitexplicit: post condition obligation in 'TestV2IFcns' (./src/test/resources/TestV2IFcns.vdmsl) at line 59:5
(forall x:nat, y:nat, z:set of (nat) &
  pre_implicitexplicit(x, y, z) => post_implicitexplicit(x, y, z, [x, y]))
*/
