-- module Types
-- exports all
-- definitions
-- types 
--     T1 = nat;
--     T2 = set of T1;
--     T3 = seq of nat;
--     T4 = map nat to T3;
--     T5 = T1 | T2 | T3 | T4;
--     T6 = <A> | <B> | <C>
     
-- end Types
module TypesInv
exports all 
definitions
types
    -- T1 = nat
    -- inv t == t > 0
    -- eq t1 = t2 == t1 = t2
    -- ord t1 < t2 == t1 < t2;
    
    -- T2 = set of T1
    -- inv s == card s > 0;

    T3 = seq of nat
    inv s == len s = card (elems s);  

    T4 = seq of nat
    inv s == (len s) = (card (elems s));  

    -- T5 = map nat to T3
    -- inv m == m <> {|->};

    T6 = <A> | <B> | <C>;
end TypesInv