module MinimalTime
exports all
definitions 

functions
	
	--@doc See the inner calls and detailed time check; don't use m > 3; too long!
	--@Warning(5012)
	f: nat * nat -> nat
	f(m, n) == 
		--@Time("f(%2s, %3s)", m, n) 
		if m = 0 then
			n+1
		else
			if n = 0 then
				f(m-1, 1)
			else
				--@Time("Outer call to f(%2s, f(%3s, %4s))", m-1, m, n-1)
				f(m-1, 
					--@Time("Inner call to f(%2s, %3s)", m, n-1)
					f(m, n-1));
				
	--@doc See just the time summary (no inner f details)
	g: nat * nat -> nat
	g(m, n) == 
		--@Time("JUST_SUMMARY")
		let 
			--@Time("Test 2 * %2s + %3s = %4s", m, n, 2 * m + n)
			x = 2 * m + n
		 in 
		--@Time("TIME_SUMMARY")
		f(m,n) + x;

--@doc instrument VDMJ to call these two to play with it. 
--f(3,4)
--g(3,4)					
end MinimalTime