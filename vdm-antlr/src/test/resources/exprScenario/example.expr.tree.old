(expression_list (expression (symbolic_literal true)) , (expression (symbolic_literal false)) , (expression (expression (symbolic_literal 1)) + (expression (expression (symbolic_literal 2)) * (expression (symbolic_literal 3)))) , (expression (expression (expression (symbolic_literal 3)) ** (expression (symbolic_literal 4))) * (expression (symbolic_literal 5))) , (expression (symbolic_literal true)) , (expression (symbolic_literal 'a')) , (expression (symbolic_literal "just text")) , (expression (symbolic_literal 10)) , (expression (symbolic_literal 10)) , (expression (symbolic_literal 20)) , (expression (symbolic_literal 4.5)) , (expression (symbolic_literal 4.5)) , (expression (sequence_enumeration [ (expression_list (expression (symbolic_literal 1)) , (expression (symbolic_literal 2)) , (expression (symbolic_literal 3))) ])) , (expression (set_range_expression { (expression (symbolic_literal 1)) , ... , (expression (symbolic_literal 5)) })) , (expression (sequence_enumeration [ (expression_list (expression (sequence_enumeration [ (expression_list (expression (symbolic_literal 1)) , (expression (symbolic_literal 2))) ])) , (expression (sequence_enumeration [ (expression_list (expression (symbolic_literal 3)) , (expression (symbolic_literal 4))) ]))) ])) , (expression (map_enumeration { (maplet (expression (symbolic_literal 1)) |-> (expression (symbolic_literal 1))) , (maplet (expression (symbolic_literal 2)) |-> (expression (symbolic_literal 3))) })) , (expression (unary_expression abs (expression (symbolic_literal 10)))) , (expression (unary_expression floor (expression (symbolic_literal 5)))) , (expression (unary_expression floor (expression (symbolic_literal 4.5)))) , (expression (unary_expression - (expression (symbolic_literal 4)))) , (expression (unary_expression + (expression (symbolic_literal 5)))) , (expression (unary_expression card (expression (name t9)))) , (expression (set_enumeration { (expression_list (expression (symbolic_literal 1)) , (expression (symbolic_literal 2)) , (expression (symbolic_literal 3))) })) , (expression (unary_expression dunion (expression (name t12)))) , (expression (unary_expression dinter (expression (name t12)))) , (expression (unary_expression len (expression (name t10)))) , (expression (unary_expression hd (expression (name t10)))) , (expression (unary_expression tl (expression (name t10)))) , (expression (unary_expression inds (expression (name t10)))) , (expression (unary_expression elems (expression (name t10)))) , (expression (unary_expression conc (expression (name t13)))) , (expression (unary_expression reverse (expression (name t10)))) , (expression (expression (name t10)) ^ (expression (name t10))) , (expression (expression (name t10)) ( (expression (symbolic_literal 2)) , ... , (expression (symbolic_literal 3)) )) , (expression (unary_expression merge (expression (set_enumeration { (expression_list (expression (name t14)) , (expression (name t15))) })))) , (expression (unary_expression dom (expression (name t14)))) , (expression (unary_expression rng (expression (name t14)))) , (expression (unary_expression inverse (expression (name t14)))) , (expression (expression (symbolic_literal 4)) + (expression (symbolic_literal 3))) , (expression (expression (symbolic_literal 4)) - (expression (symbolic_literal 2))) , (expression (expression (symbolic_literal 4)) * (expression (symbolic_literal 2))) , (expression (expression (symbolic_literal 4)) div (expression (symbolic_literal 2))) , (expression (expression (symbolic_literal 4)) / (expression (symbolic_literal 2))) , (expression (expression (symbolic_literal 4)) mod (expression (symbolic_literal 3))) , (expression (expression (symbolic_literal 4)) rem (expression (symbolic_literal 3))) , (expression (expression (symbolic_literal 2)) ** (expression (symbolic_literal 3))) , (expression (expression (symbolic_literal 3)) = (expression (symbolic_literal 3))) , (expression (expression (symbolic_literal 3)) <> (expression (symbolic_literal 4))) , (expression (expression (symbolic_literal 4)) <= (expression (symbolic_literal 5))) , (expression (expression (symbolic_literal 4)) < (expression (symbolic_literal 5))) , (expression (expression (symbolic_literal 5)) >= (expression (symbolic_literal 4))) , (expression (expression (symbolic_literal 5)) > (expression (symbolic_literal 4))) , (expression (expression (name t14)) ++ (expression (name t15))) , (expression (expression (name t9)) <: (expression (name t14))) , (expression (expression (name t9)) <-: (expression (name t14))) , (expression (expression (name t14)) :> (expression (name t9))) , (expression (expression (name t14)) :-> (expression (name t9))) , (expression (expression (name t14)) munion (expression (name t15))) , (expression (expression (name t14)) comp (expression (name t15))) , (expression (unary_expression not (expression (name t1)))) , (expression (expression (name t1)) and (expression (name t1))) , (expression (expression (name t1)) or (expression (name t1))) , (expression (expression (name t1)) => (expression (name t1))) , (expression (expression (name t1)) <=> (expression (name t1))) , (expression (expression (symbolic_literal 1)) in set (expression (name t9))) , (expression (expression (symbolic_literal 5)) not in set (expression (name t9))) , (expression (expression (name t9)) union (expression (name t11))) , (expression (expression (name t9)) inter (expression (name t11))) , (expression (expression (name t9)) \ (expression (name t11))) , (expression (expression (name t9)) subset (expression (name t11))) , (expression (expression (name t9)) psubset (expression (name t11))) , (expression (set_range_expression { (expression (symbolic_literal 1)) , ... , (expression (symbolic_literal 3)) })) , (expression (set_enumeration { (expression_list (expression (symbolic_literal 1)) , (expression (symbolic_literal 2)) , (expression (symbolic_literal 3)) , (expression (symbolic_literal 4))) })) , (expression (sequence_enumeration [ (expression_list (expression (symbolic_literal 1)) , (expression (symbolic_literal 3)) , (expression (symbolic_literal 4))) ])) , (expression (map_enumeration { (maplet (expression (symbolic_literal 1)) |-> (expression (symbolic_literal 2))) , (maplet (expression (symbolic_literal 2)) |-> (expression (symbolic_literal 3))) })) , (expression (tuple_constructor mk_ ( (expression (symbolic_literal 1)) , (expression_list (expression (symbolic_literal 2))) ))) , (expression (tuple_constructor mk_ ( (expression (symbolic_literal 1)) , (expression_list (expression (symbolic_literal 2)) , (expression (symbolic_literal 3))) ))) , (expression (tuple_constructor mk_ ( (expression (symbolic_literal 1)) , (expression_list (expression (symbolic_literal 2)) , (expression (symbolic_literal 3)) , (expression (symbolic_literal 4))) ))) , (expression (name v64)))
