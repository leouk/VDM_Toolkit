# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: Generate settings.xml for Maven Builds
      # You may pin to the exact commit or the version.
      # uses: whelk-io/maven-settings-xml-action@7c60eb95b2d5ec18f2e0e29f34c9ed69475e7a96
      uses: whelk-io/maven-settings-xml-action@v21
      with:
        servers: >
          [
            {
              "id": "github",
              "username": "${{github.actor}}",
              "password": "${{github.token}}",
              "configuration": {
                "httpConfiguration": {
                  "all": {
                    "usePreemptive": "true"
                  }
                }
              }
            }
          ]
        # json array of repositories to add to settings.xml
        repositories: >
          [
            {
              "id": "central",
              "name": "Maven Central",
              "url": "https://repo1.maven.org/maven2",
              "releases": {
                "enabled": "true"
              },
              "snapshots": {
                "enabled": "false"
              }
            },
            {
              "id": "github",
              "url": "https://maven.pkg.github.com/nickbattle/*",
              "releases": {
                "enabled": "true"
              },
              "snapshots": {
                "enabled": "true"
              }
            }
          ]
    - name: Maven clean install
      run: mvn -B clean install --file pom.xml
      env: 
        GITHUB_TOKEN: ${{github.token}}
        
    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
