module TestV2IErrors
exports all
definitions

types

	--Isabelle does not allow empty records
	--Error   [ISA   ] 10208: Isabelle does not allow zero-fields records for VDM mk_S expression.
	S :: ;

	R :: 
		x: nat 
		y: nat	
	inv r == r.x < r.y
	--Error   [ISA   ] 10230: Isabelle translation does not support more than one non-basic pattern in a pattern list
	eq mk_R(x1,y1) = mk_R(x2,y2) == x1 = x2 and y1 = y2;
	
	--this one will give an ISA error 10205: you have to define the inner type as a union!
	--Error   [ISA   ] 10220: Union types are not allowed for `TUnion`: you *must* declare its parts as a named type.
	TUnion = set of (nat | real);
	
	--this is how to do TUnion without error (and with the same outcome)
	TInnerUnion = nat | real;
	TInnerUnion' = set of TInnerUnion;
	
	-- only tuple or concatenation allowed within structured patterns within record patterns 
	E :: e: set of int
	inv mk_E({i,j,k}) == i < j and j < k;

	-- no concatenate patterns 
	F :: f: seq of int
	inv mk_F(s^t) == len s < len t;
	
	-- no sequence patterns either
	T = set of nat
	inv {a,b,c} == a < b and b < c;

	--inv_T1 <> inv_T! 
	--T1 = set of nat
	--inv t == card t = 3 and (forall x, y in set t & x <> y => x < y); 

	--Error   [ISA   ] 10215: Invalid invariant type for R : must define both eq and ord specificaition. in 'TestV2ITypesRecordOrdering'
	R2 ::
		x: nat
	ord r1 < r2 == r1.x < r2.x;

functions
	-- multiple type binds in seq comp
	--Error   [ISA   ] 10210: Type bound sequence compression is not supported in Isabelle.
	vc33: () -> seq of nat
	vc33() == [ x | x : nat & x > 10];
	
	--same is true of quote unions
	f1: int -> bool | <ERROR> 
	f1(x) == if x > 10 then <ERROR> else false;	

	--even for single value quote! 
	f1': int -> <ERROR>
	f1'(-) == <ERROR>;

	--cannot figure out the structural ordering when no eq/ord pairs are defined
	rcomp: R2 * R2 -> bool
	rcomp(r0, r1) == r0 >= r1;

values
	v65: R = mk_R(1, 2);				
	
	-- can only bind one variable for seqcomp, hence "-" for y! 
	-- v65 might not be "orderable"; user has to convince isabelle that v65.x is orderable, hence the warning by plugin; but error in Isabelle.  
	--Warning [ISA   ] 11205: Set bind `(dummy0 \<in> {v65})` in sequence comprehension requires its Isabelle type to instantiate class linorder. 
	v830=[ x | mk_R(x,-) in set {v65} & 0 < x ]; 

	--Error   [ISA   ] 10224: Cannot contextully translate pattern [x,  y] (structured=VDMSeq) for TRStructuredPattern. 
	--Error   [VDM   ] 10106: Invalid map comprehension arguments for `bindings` length(2) = ([x,  y] \<in> {[(1::VDMNat1), (2::VDMNat1)], [(3::VDMNat1), (4::VDMNat1)], [(4::VDMNat1), (5::VDMNat1)]}).
	v954= { x + y |-> 10 | [x,y] in set {[1,2], [3,4], [4,5]} }; -- this is getting silly now
 
	--Error   [ISA   ] 10229: Translating VDM ignore (-) patterns as top-level definitions will cause unexpected outcomes.
	-:nat = 10;	

	--Error   [ISA   ] 10231: Invalid set range: its inner type *must* be numeric, yet not rat or real = VDMInt VDMSet
	WickedSet : set of int = {-1.4,...,3.0};

end TestV2IErrors

