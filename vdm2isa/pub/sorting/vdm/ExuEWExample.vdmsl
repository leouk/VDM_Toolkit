-- Examples of Exu errors and warnings
module ExuEWExample
exports all
definitions

types
    --@doc numeric types can afford to have just eq or ord
    T1 = nat 
    eq t1 = t2 == t1 = t2;

    T2 = nat
    inv t == t > 10
    ord t1 < t2 == t1 < t2;

    --@doc structured types must have both
    -- Warning [VDM   ] 11152: Type definition for type `R` requires both eq and ord specifications; otherwise, it will require Isabelle `ord` type class instantiation! in 'ExuEWExample'
    R :: x: nat 
    eq r1 = r2 == r1.x = r2.x;

functions 

    --@doc functions with types without invariants are okay
    f: T1 -> nat
    f(x) == x;

    --@doc if "exu set linv true" then 
    -- Warning [VDM   ] 11151: Definition of `g` body depends on `f` yet `g` does not check input type invariants for `f` when arguments are not subtype compatible! Better to have a call to `pre_f` with corresponding arguments in the definition of `g`. 
    g: T2 -> nat
    g(x) == f(x);

    k: T1 -> nat 
    k(x) == x
    pre x > 20;

    h: T2 -> nat 
    h(x) == x
    pre k(x) > 0;

end ExuEWExample